<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd">

	<!-- 
		What context:component-scan does is that it tells the spring to search for
		annotations like @Repository, @Controller, @Service and @Component in all classes under the given package,
		and register them as a bean just like we would write them here like this: 
		<bean class="..." />
	-->
	<context:component-scan base-package="hu.schonherz.java.training.hw7.service" />
	
	<bean class="hu.schonherz.java.training.hw7.dao.impl.OrderDaoImpl" />
	
	<bean class="hu.schonherz.java.training.hw7.dao.impl.ProductDaoImpl" />

	<bean class="hu.schonherz.java.training.hw7.dao.impl.UserDaoImpl" />

</beans>
